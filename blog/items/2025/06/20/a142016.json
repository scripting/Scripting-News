{
    "text": "I read through the <a href=\"http://scripting.com/publicfolder/scripting/misc/quickdrawApiSummary.pdf\">QuickDraw API summary</a> from 1985. For me it was like someone who built applications of electricity, going back to see Edison's workbench before there was an industry. It was so seminal. It would never work in today's architectures, almost everything was global. There were five color constants, white, black, gray, ltGray, dkGray. You could see the whole archtecture in just a few pages. It wasn't bloated yet. And the best thing was <a href=\"https://imgs.scripting.com/2025/06/20/globals.png\">there</a> was the screen memory. Not hidden. If you didn't like the way <a href=\"http://scripting.com/2025/06/19/152802.html\">QuickDraw</a> worked, you could go around it. It was an idea I only ever used on the Apple II, it was imho Woz's big contribution, for me coming from Unix it was incredible to have so much power. On the Mac it showed up as a <a href=\"https://imgs.scripting.com/2025/06/20/globals.png\">variable</a> in a high level language, on the Apple II, you had to know the physical address, but in both cases, when you stored a bit in the memory it showed up on the screen. We never saw anything like that on the previous generation of machines, IBM mainframes and Digital minis. Someday someone will go through all this and see how it evolved. These <a href=\"http://scripting.com/publicfolder/scripting/misc/quickdrawApiSummary.pdf\">pages</a> are a tiny but hugely significant slice. Maybe with next year's ChatGPT. ",
    "created": "Fri, 20 Jun 2025 14:20:16 GMT",
    "type": "outline",
    "image": "https://imgs.scripting.com/2018/03/02/daveTulanePhotoBooth.png",
    "flInCalendar": true
}
{
    "text": "I'm working on a server app to read blogroll source in OPML, and build a database of other blogrolls that are linked to feeds in the original blogroll, accessed via the <a href=\"https://opml.org/blogroll.opml\">feed or html source</a>. It was a lucky thing when I designed the format for <a href=\"https://opml.org/spec2.opml#subscriptionLists\">subscription lists</a> back in the 00s that it included the <i>htmlUrl</i> attribute, it makes the HTML easier to find (though the channel-level link element in the feed could play the same role). Anyway, of course I'm using a SQL database for all this, and when I was thinking about it initially I thought \"no big deal\" it's a variant of a SQL table I've now done a dozen times. But it was a big deal, because I've yet to come up with a way to factor this so that I have a library that knows how to make the kind of table that keeps coming up all the time, to bury the complexity and make creating a new one much simpler. Same thing with CSS and JavaScript. I know the justification for CSS is that it makes scaling from phones to desktops possible, but that would be equally possible if you provided a good object with properties that can be configured at runtime. That's how we do it on servers with a config.json file. Then you could do a much better job of factoring browser-based apps. Imagine how much smoother everything would be if these structures could be factored. This probably doesn't make sense to too many people, maybe it won't even make sense to me in a couple of years, when hopefully I've moved on to a better way of doing these things. I would love to have the time to take a crack at doing the factoring anyway, I'm sure it's possible, just not obvious how to do it. In the meantime I think there are now enough blogrolls out there to build something interesting out of them, which is why I'm taking my break from <i>The Next Product</i> to do this. ",
    "created": "Thu, 13 Jun 2024 12:34:37 GMT",
    "type": "outline",
    "image": "https://imgs.scripting.com/2024/06/11/nakedJenToday.png",
    "flInCalendar": true
}